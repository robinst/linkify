name: ci
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo check

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.46.0 # MSRV (minimum supported Rust version)
          - stable
          - beta
        include:
          - rust: 1.46.0
            msrv: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      # See https://github.com/matklad/once_cell/issues/201
      # To test locally, enable the lock file and then run:
      # $ docker run --rm --user "$(id -u)":"$(id -g)" -v "$PWD":/usr/src/myapp -w /usr/src/myapp rust:1.46.0 cargo test
      - name: Use Cargo.lock for MSRV
        if: ${{ matrix.msrv }}
        run: cp Cargo.lock.msrv Cargo.lock

      - run: cargo test

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --all -- --check

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - run: cargo tarpaulin --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  demo:
    name: wasm demo
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: demo
    steps:
      - uses: actions/checkout@v4
      # Waiting for new wasm-bindgen release to run with newer rust:
      # https://github.com/rustwasm/wasm-bindgen/issues/4211
      - uses: dtolnay/rust-toolchain@1.81
      - run: yarn
      - run: yarn build
